trigger:
  branches:
    include:
      - main  
pool:
  vmImage: 'windows-latest'

variables:
  resourceGroupName: 'WeatherImageDemo'
  location: 'westeurope'
  templateFilePath: './main.bicep'
  appInsightsLocation: 'westeurope'
  functionAppName: 'fnappoekk4niakfyi4' 
  stages:
#   - stage: DeployInfrastructure
#     displayName: "Deploy Azure Resources"
#     jobs:
#       - job: DeployResources
#         displayName: "Create Resource Group and Deploy Bicep Template"
#         steps:
#           - task: AzureCLI@2
#             inputs:
#               azureSubscription: "WeatherImageConnection" 
#               scriptType: "ps"
#               scriptLocation: "inlineScript"
#               inlineScript: |
#                 # Step 1: Create the resource group
#                 Write-Output "Creating resource group '$env:resourceGroupName' in location '$env:location'..."
#                 az group create --name $env:resourceGroupName --location $env:location
#                 Write-Output "Resource group '$env:resourceGroupName' created successfully."

#                 # Step 2: Deploy resources using the Bicep template
#                 Write-Output "Deploying resources to resource group '$env:resourceGroupName' using template '$env:templateFilePath'..."
#                 az deployment group create --resource-group $env:resourceGroupName --template-file $env:templateFilePath --parameters appInsightsLocation=$env:appInsightsLocation
#                 Write-Output "Resources deployed successfully in resource group '$env:resourceGroupName'."

  - stage: DeployFunctionApp
    displayName: "Publish Function App"
    dependsOn: DeployInfrastructure
    jobs:
      - job: PublishFunction
        displayName: "Publish Azure Function App"
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '6.x'  

          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: AzureCLI@2
            inputs:
              azureSubscription: "WeatherImageConnection"  
              scriptType: "ps"
              scriptLocation: "inlineScript"
              inlineScript: |
                # Step 3: Publish the Function App
                Write-Output "Publishing Function App '$env:functionAppName'..."
                func azure functionapp publish $env:functionAppName --no-build --publish-local-settings -i $(Pipeline.Workspace)/drop/*.zip
                Write-Output "Function App '$env:functionAppName' published successfully."
